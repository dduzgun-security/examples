version: "3.7"

services:
  ###########################
  # INFRASTRUCTURE RESSOURCES
  ###########################

  traefik:
    image: "traefik:v2.8"
    depends_on:
      - oathkeeper
    container_name: "traefik"
    command:
      # - "--log.level=INFO"
      - "--accesslog"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST:-traefik.localhost}`)"
      - traefik.http.services.traefik.loadbalancer.server.port=8080
      - "traefik.http.middlewares.forwardToOathkeeper.forwardauth.address=http://oathkeeper:4456/decisions"
      - "traefik.http.middlewares.forwardToOathkeeper.forwardauth.authResponseHeaders=X-User"
      - "traefik.http.middlewares.forwardToOathkeeper.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.forwardToOathkeeper.forwardauth.tls.insecureSkipVerify=true"

  whoami:
    image: "traefik/whoami"
    container_name: "simple-service"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=(Host(`auth.localhost`) && PathPrefix(`/whoami`))"
      - "traefik.http.middlewares.whoami-stripprefix.stripprefix.prefixes=/whoami"
      - "traefik.http.routers.whoami.middlewares=whoami-stripprefix@docker,forwardToOathkeeper"
      - "traefik.http.routers.whoami.entrypoints=web"

  jaeger:
    image: jaegertracing/all-in-one
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jaeger.rule=Host(`jaeger.localhost`)"
      - "traefik.http.routers.jaeger.entrypoints=web"
      - "traefik.http.services.jaeger.loadbalancer.server.port=16686"

  postgresd:
    image: postgres:9.6
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=kratos
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=kratos

  mailslurper:
    image: oryd/mailslurper:latest-smtps
    ports:
      - '4436:4436'
      - '4437:4437'
  

  ###########################
  # ORY RESSOURCES
  ###########################

  kratos-migrate:
    image: oryd/kratos:v0.10.1
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    volumes:
      - type: bind
        source: ${PWD}/ory/configs/kratos
        target: /etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure

  kratos_public:
    depends_on:
      - kratos-migrate
      - postgresd
      - mailslurper
    image: oryd/kratos:v0.10.1
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ${PWD}/ory/configs/kratos
        target: /etc/config/kratos
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kratos-public.rule=(Host(`auth.localhost`) && PathPrefix(`/ory/kratos/public`))"
      - "traefik.http.middlewares.kratos-public-stripprefix.stripprefix.prefixes=/ory/kratos/public"
      - "traefik.http.routers.kratos-public.middlewares=kratos-public-stripprefix@docker"
      - "traefik.http.routers.kratos-public.entrypoints=web"
      - "traefik.http.services.kratos-public.loadbalancer.server.port=4433"

  kratos_admin:
    depends_on:
      - kratos-migrate
      - postgresd
      - mailslurper
    image: oryd/kratos:v0.10.1
    restart: unless-stopped
    environment:
      - DSN=postgres://kratos:secret@postgresd:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
      - LOG_LEVEL=trace
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    volumes:
      - type: bind
        source: ${PWD}/ory/configs/kratos
        target: /etc/config/kratos
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kratos-admin.rule=(Host(`auth.localhost`) && PathPrefix(`/ory/kratos`))"
      - "traefik.http.middlewares.kratos-admin-stripprefix.stripprefix.prefixes=/ory/kratos"
      - "traefik.http.routers.kratos-admin.middlewares=kratos-admin-stripprefix@docker"
      - "traefik.http.routers.kratos-admin.entrypoints=web"
      - "traefik.http.services.kratos-admin.loadbalancer.server.port=4434"

  oathkeeper:
    depends_on:
      - kratos_public
      - kratos_admin
      - jaeger
    image: oryd/oathkeeper:v0.40.0
    command: serve --config=/etc/config/oathkeeper/oathkeeper.yml
    environment:
      - TRACING_PROVIDER=jaeger
      - TRACING_PROVIDER_JAEGER_SAMPLING_SERVER_URL=http://jaeger.localhost/sampling
      - TRACING_PROVIDER_JAEGER_LOCAL_AGENT_ADDRESS=jaeger:6831
      - TRACING_PROVIDER_JAEGER_SAMPLING_TYPE=const
      - TRACING_PROVIDER_JAEGER_SAMPLING_VALUE=1
      # - LOG_LEVEL=DEBUG
    volumes:
      - type: bind
        source: ${PWD}/ory/configs/oathkeeper
        target: /etc/config/oathkeeper
    restart: on-failure
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.oathkeeper.rule=(Host(`auth.localhost`) && PathPrefix(`/ory/oathkeeper`))"
      - "traefik.http.middlewares.oathkeeper-stripprefix.stripprefix.prefixes=/ory/oathkeeper"
      - "traefik.http.routers.oathkeeper.middlewares=oathkeeper-stripprefix@docker"
      - "traefik.http.routers.oathkeeper.entrypoints=web"
      - "traefik.http.routers.oathkeeper.service=oathkeeper"
      - "traefik.http.services.oathkeeper.loadbalancer.server.port=4456"
  
  
  ###########################
  # APPLICATION RESSOURCES
  ###########################

  frontend:
    depends_on:
      - traefik
    container_name: frontend
    build: ./frontend/authentication
    volumes:
      - './:/app'
      - '/app/node_modules'
    ports:
      - "3000"
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_KRATOS_PUBLIC_URL=http://auth.localhost/ory/kratos/public
      - REACT_APP_URL=http://auth.localhost
    command: npm start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=(Host(`auth.localhost`) && PathPrefix(`/`))"
      - "traefik.http.middlewares.frontend-stripprefix.stripprefix.prefixes=/"
      - "traefik.http.routers.frontend.middlewares=frontend-stripprefix@docker,forwardToOathkeeper"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
